  METHOD usertypeset_get_entity.
**TRY.
*CALL METHOD SUPER->USERTYPESET_GET_ENTITY
*  EXPORTING
*    IV_ENTITY_NAME          =
*    IV_ENTITY_SET_NAME      =
*    IV_SOURCE_NAME          =
*    IT_KEY_TAB              =
**    IO_REQUEST_OBJECT       =
**    IO_TECH_REQUEST_CONTEXT =
*    IT_NAVIGATION_PATH      =
**  IMPORTING
**    ER_ENTITY               =
**    ES_RESPONSE_CONTEXT     =
*    .
** CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION .
** CATCH /IWBEP/CX_MGW_TECH_EXCEPTION .
**ENDTRY.
*-----------------------------------------------------------------------------*
*Data Declaration Start
    DATA:
              lv_key  TYPE string,
              ls_key_tab  LIKE LINE OF it_key_tab.
*Data Declaration End
*-----------------------------------------------------------------------------*
*Business Logic Start
    READ TABLE it_key_tab INTO ls_key_tab WITH KEY name = 'Key'.
    IF sy-subrc = 0.
      er_entity-key = lv_key = ls_key_tab-value.
    ENDIF.
    IF lv_key = 'G'.
      er_entity-user = sy-uname.
      er_entity-name = ''.

      SELECT SINGLE COUNT( * )
        FROM zmars_approver
        WHERE approver = sy-uname
        AND usertype = 'F'.
      IF sy-subrc = 0.
        er_entity-type = 'F'.
      ENDIF.

      SELECT SINGLE COUNT( * )
        FROM zmars_approver
        WHERE approver = sy-uname
        AND usertype = 'L'.
      IF sy-subrc = 0.
        er_entity-type = 'L'.
      ENDIF.


    ENDIF.
*Business Logic End
*-----------------------------------------------------------------------------*
  ENDMETHOD.                    "usertypeset_get_entity
